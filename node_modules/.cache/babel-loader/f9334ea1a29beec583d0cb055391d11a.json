{"ast":null,"code":"var _jsxFileName = \"/Users/aigerim.kashkarbekova/Desktop/themusichall/themusic-hall/src/components/Player.js\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleRight, faAngleLeft, faPause } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = _ref => {\n  let {\n    audioRef,\n    isPlaying,\n    setIsPlaying,\n    setSongInfo,\n    songInfo,\n    songs,\n    currentSong,\n    setCurrentSong\n  } = _ref;\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  const skipTrackHandler = direction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (direction === 'skip-forward') {\n      setCurrentSong(songs[currentIndex + 1]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: 0,\n        onChange: dragHandler,\n        max: songInfo.duration || 0,\n        value: songInfo.currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler('skip-back'),\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: isPlaying ? faPause : faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler('skip-forward'),\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/aigerim.kashkarbekova/Desktop/themusichall/themusic-hall/src/components/Player.js"],"names":["React","FontAwesomeIcon","faPlay","faAngleRight","faAngleLeft","faPause","Player","audioRef","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","currentSong","setCurrentSong","playSongHandler","current","pause","play","getTime","time","Math","floor","slice","dragHandler","e","currentTime","target","value","skipTrackHandler","direction","currentIndex","findIndex","song","id","duration"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,WAA/B,EAA4CC,OAA5C,QAA2D,mCAA3D;;;AAEA,MAAMC,MAAM,GAAG,QAAmG;AAAA,MAAlG;AAACC,IAAAA,QAAD;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,YAAtB;AAAoCC,IAAAA,WAApC;AAAiDC,IAAAA,QAAjD;AAA2DC,IAAAA,KAA3D;AAAkEC,IAAAA,WAAlE;AAA+EC,IAAAA;AAA/E,GAAkG;;AAC9G,QAAMC,eAAe,GAAG,MAAM;AAC1B,QAAIP,SAAJ,EAAc;AACVD,MAAAA,QAAQ,CAACS,OAAT,CAAiBC,KAAjB;AACAR,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,KAHD,MAGK;AACDD,MAAAA,QAAQ,CAACS,OAAT,CAAiBE,IAAjB;AACAT,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AAEH;AACJ,GATD;;AAWA,QAAMW,OAAO,GAAIC,IAAD,IAAU;AACtB,WACIC,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,EAAlB,IAAwB,GAAxB,GAA8B,CAAC,MAAMC,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,EAAlB,CAAP,EAA8BG,KAA9B,CAAoC,CAAC,CAArC,CADlC;AAGH,GAJD;;AAKA,QAAMC,WAAW,GAAIC,CAAD,IAAM;AACtBlB,IAAAA,QAAQ,CAACS,OAAT,CAAiBU,WAAjB,GAA+BD,CAAC,CAACE,MAAF,CAASC,KAAxC;AACAlB,IAAAA,WAAW,CAAC,EAAC,GAAGC,QAAJ;AAAce,MAAAA,WAAW,EAAED,CAAC,CAACE,MAAF,CAASC;AAApC,KAAD,CAAX;AAEH,GAJD;;AAKA,QAAMC,gBAAgB,GAAGC,SAAD,IAAe;AACnC,QAAIC,YAAY,GAAGnB,KAAK,CAACoB,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYrB,WAAW,CAACqB,EAAlD,CAAnB;;AACA,QAAGJ,SAAS,KAAK,cAAjB,EAAgC;AAC5BhB,MAAAA,cAAc,CAACF,KAAK,CAACmB,YAAY,GAAG,CAAhB,CAAN,CAAd;AACH;AACJ,GALD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA,kBAAIZ,OAAO,CAACR,QAAQ,CAACe,WAAV;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACA,QAAA,IAAI,EAAC,OADL;AAEA,QAAA,GAAG,EAAE,CAFL;AAGA,QAAA,QAAQ,EAAEF,WAHV;AAIA,QAAA,GAAG,EAAEb,QAAQ,CAACwB,QAAT,IAAqB,CAJ1B;AAKA,QAAA,KAAK,EAAExB,QAAQ,CAACe;AALhB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAA,kBAAIP,OAAO,CAACR,QAAQ,CAACwB,QAAV;AAAX;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI,QAAC,eAAD;AACA,QAAA,OAAO,EAAE,MAAMN,gBAAgB,CAAC,WAAD,CAD/B;AAEA,QAAA,SAAS,EAAC,WAFV;AAGA,QAAA,IAAI,EAAC,IAHL;AAIA,QAAA,IAAI,EAAEzB;AAJN;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,eAAD;AACA,QAAA,OAAO,EAAEW,eADT;AAEA,QAAA,SAAS,EAAC,MAFV;AAEiB,QAAA,IAAI,EAAC,IAFtB;AAGA,QAAA,IAAI,EAAEP,SAAS,GAAGH,OAAH,GAAaH;AAH5B;AAAA;AAAA;AAAA;AAAA,cAPJ,eAYI,QAAC,eAAD;AACA,QAAA,OAAO,EAAE,MAAM2B,gBAAgB,CAAC,cAAD,CAD/B;AAEA,QAAA,SAAS,EAAC,cAFV;AAGA,QAAA,IAAI,EAAC,IAHL;AAIA,QAAA,IAAI,EAAE1B;AAJN;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CA9DD;;KAAMG,M;AAgEN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faPlay, faAngleRight, faAngleLeft, faPause } from \"@fortawesome/free-solid-svg-icons\"\n\nconst Player = ({audioRef, isPlaying, setIsPlaying, setSongInfo, songInfo, songs, currentSong, setCurrentSong}) =>{\n    const playSongHandler = () => {\n        if (isPlaying){\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n        }else{\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n\n        }\n    }; \n   \n    const getTime = (time) => { \n        return(\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        );\n    };\n    const dragHandler = (e) =>{\n        audioRef.current.currentTime = e.target.value\n        setSongInfo({...songInfo, currentTime: e.target.value})\n\n    }\n    const skipTrackHandler =(direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n        if(direction === 'skip-forward'){\n            setCurrentSong(songs[currentIndex + 1])\n        }\n    };\n    return(\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <input \n                type=\"range\" \n                min={0} \n                onChange={dragHandler}\n                max={songInfo.duration || 0} \n                value={songInfo.currentTime}/>\n                <p>{getTime(songInfo.duration)}</p>\n            </div> \n            <div className=\"play-control\">\n                <FontAwesomeIcon \n                onClick={() => skipTrackHandler('skip-back')}\n                className=\"skip-back\" \n                size=\"2x\" \n                icon={faAngleLeft}\n                />\n                <FontAwesomeIcon \n                onClick={playSongHandler} \n                className=\"play\" size=\"2x\" \n                icon={isPlaying ? faPause : faPlay}\n                />\n                <FontAwesomeIcon \n                onClick={() => skipTrackHandler('skip-forward')}\n                className=\"skip-forward\" \n                size=\"2x\" \n                icon={faAngleRight}\n                />\n            </div>   \n        </div>\n\n    )\n}\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}