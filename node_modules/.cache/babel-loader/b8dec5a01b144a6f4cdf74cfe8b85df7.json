{"ast":null,"code":"var _jsxFileName = \"/Users/aigerim.kashkarbekova/Desktop/themusichall/themusic-hall/src/components/LibrarySong.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LibrarySong = _ref => {\n  let {\n    song,\n    songs,\n    setCurrentSong,\n    id,\n    audioRef,\n    isPlaying,\n    set\n  } = _ref;\n\n  const songSelectHandler = () => {\n    const selectedSong = songs.filter(state => state.id === id);\n    setCurrentSong(selectedSong[0]); // add Active state\n\n    const newSongs = songs.map(song => {\n      if (song.id === id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs); // check if the song is playing \n\n    if (isPlaying) {\n      const playPromise = audioRef.current.play();\n\n      if (playPromise !== undefined) {\n        playPromise.then(audio => {\n          audioRef.current.play();\n        });\n      }\n    } // audioRef.current.play();\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: songSelectHandler,\n    className: `library-song ${song.active ? 'selected' : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: song.name,\n      src: song.cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["/Users/aigerim.kashkarbekova/Desktop/themusichall/themusic-hall/src/components/LibrarySong.js"],"names":["React","LibrarySong","song","songs","setCurrentSong","id","audioRef","isPlaying","set","songSelectHandler","selectedSong","filter","state","newSongs","map","active","setSongs","playPromise","current","play","undefined","then","audio","name","cover","artist"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAKA,MAAMC,WAAW,GAAG,QAAkE;AAAA,MAAjE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,cAAf;AAA+BC,IAAAA,EAA/B;AAAmCC,IAAAA,QAAnC;AAA6CC,IAAAA,SAA7C;AAAwDC,IAAAA;AAAxD,GAAiE;;AAClF,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,UAAMC,YAAY,GAAGP,KAAK,CAACQ,MAAN,CAAcC,KAAD,IAAWA,KAAK,CAACP,EAAN,KAAaA,EAArC,CAArB;AACAD,IAAAA,cAAc,CAACM,YAAY,CAAC,CAAD,CAAb,CAAd,CAF4B,CAG5B;;AACA,UAAMG,QAAQ,GAAGV,KAAK,CAACW,GAAN,CAAWZ,IAAD,IAAS;AAChC,UAAGA,IAAI,CAACG,EAAL,KAAYA,EAAf,EAAkB;AACd,eAAM,EACF,GAAGH,IADD;AAEFa,UAAAA,MAAM,EAAE;AAFN,SAAN;AAIH,OALD,MAKK;AACD,eAAM,EACF,GAAGb,IADD;AAEFa,UAAAA,MAAM,EAAE;AAFN,SAAN;AAIH;AACJ,KAZgB,CAAjB;AAaAC,IAAAA,QAAQ,CAACH,QAAD,CAAR,CAjB4B,CAkB5B;;AACA,QAAGN,SAAH,EAAa;AACT,YAAMU,WAAW,GAAGX,QAAQ,CAACY,OAAT,CAAiBC,IAAjB,EAApB;;AACA,UAAIF,WAAW,KAAKG,SAApB,EAA8B;AAC1BH,QAAAA,WAAW,CAACI,IAAZ,CAAkBC,KAAD,IAAU;AACvBhB,UAAAA,QAAQ,CAACY,OAAT,CAAiBC,IAAjB;AACH,SAFD;AAGH;AACJ,KA1B2B,CA2B5B;;AACH,GA5BD;;AA6BA,sBACI;AAAK,IAAA,OAAO,EAAEV,iBAAd;AAAiC,IAAA,SAAS,EAAG,gBAAeP,IAAI,CAACa,MAAL,GAAc,UAAd,GAA2B,EAAG,EAA1F;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEb,IAAI,CAACqB,IAAf;AAAqB,MAAA,GAAG,EAAErB,IAAI,CAACsB;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACA;AAAA,kBAAKtB,IAAI,CAACqB;AAAV;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBAAKrB,IAAI,CAACuB;AAAV;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAxCD;;KAAMxB,W;AA0CN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\n\n\n\nconst LibrarySong = ({ song, songs, setCurrentSong, id, audioRef, isPlaying, set }) =>{\n    const songSelectHandler = () => {\n        const selectedSong = songs.filter((state) => state.id === id);\n        setCurrentSong(selectedSong[0]);\n        // add Active state\n        const newSongs = songs.map((song) =>{\n            if(song.id === id){\n                return{\n                    ...song,\n                    active: true,\n                };\n            }else{\n                return{\n                    ...song,\n                    active: false,\n                };\n            }\n        });\n        setSongs(newSongs);\n        // check if the song is playing \n        if(isPlaying){\n            const playPromise = audioRef.current.play();\n            if (playPromise !== undefined){\n                playPromise.then((audio) =>{\n                    audioRef.current.play();\n                })\n            }\n        }\n        // audioRef.current.play();\n    };\n    return(\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\n            <img alt={song.name} src={song.cover}></img>\n            <div className=\"song-description\">\n            <h3>{song.name}</h3>\n            <h4>{song.artist}</h4>\n            </div>\n        </div>\n\n    )\n}\n\nexport default LibrarySong;"]},"metadata":{},"sourceType":"module"}