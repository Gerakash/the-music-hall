{"ast":null,"code":"var _jsxFileName = \"/Users/aigerim.kashkarbekova/Desktop/themusichall/themusic-hall/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\"; // import data\n\nimport data from \"./data\"; // import styles\n\nimport \"./styles/app.scss\"; // adding components\n\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // reference\n  const audioRef = useRef(null); // state\n\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0\n  });\n\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo,\n      currentTime: current,\n      duration\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Song, {\n      currentSong: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      audioRef: audioRef,\n      setIsPlaying: setIsPlaying,\n      isPlaying: isPlaying,\n      currentSong: currentSong,\n      setSongInfo: setSongInfo,\n      songInfo: songInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      audioRef: au,\n      songs: songs,\n      setCurrentSong: setCurrentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      onLoadedMetadata: timeUpdateHandler,\n      src: currentSong.audio,\n      onTimeUpdate: timeUpdateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Cy/LZXqw/qpim47EQfwmCSBpFNI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aigerim.kashkarbekova/Desktop/themusichall/themusic-hall/src/App.js"],"names":["React","useState","useRef","data","Player","Song","Library","App","audioRef","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","songInfo","setSongInfo","currentTime","duration","timeUpdateHandler","e","current","target","au","audio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;AACA,OAAO,mBAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACZ;AACA,QAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB,CAFY,CAGb;;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACE,IAAI,EAAL,CAAlC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAACQ,KAAK,CAAC,CAAD,CAAN,CAA9C;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AAAoD,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC;AAC3FgB,IAAAA,WAAW,EAAE,CAD8E;AAE3FC,IAAAA,QAAQ,EAAE;AAFiF,GAAD,CAAxC;;AAItD,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAMC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASL,WAAzB;AACA,UAAMC,QAAQ,GAAGE,CAAC,CAACE,MAAF,CAASJ,QAA1B;AACAF,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AACRE,MAAAA,WAAW,EAAEI,OADL;AACeH,MAAAA;AADf,KAAD,CAAX;AAGD,GAND;;AASE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEP;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACA,MAAA,QAAQ,EAAEH,QADV;AAEA,MAAA,YAAY,EAAEM,YAFd;AAGA,MAAA,SAAS,EAAED,SAHX;AAIA,MAAA,WAAW,EAAEF,WAJb;AAKA,MAAA,WAAW,EAAEK,WALb;AAMA,MAAA,QAAQ,EAAED;AANV;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE,QAAC,OAAD;AACA,MAAA,QAAQ,EAAEQ,EADV;AAEA,MAAA,KAAK,EAAEd,KAFP;AAGA,MAAA,cAAc,EAAEG;AAHhB;AAAA;AAAA;AAAA;AAAA,YAVF,eAcE;AACM,MAAA,GAAG,EAAEJ,QADX;AAEM,MAAA,gBAAgB,EAAEW,iBAFxB;AAGM,MAAA,GAAG,EAAER,WAAW,CAACa,KAHvB;AAIM,MAAA,YAAY,EAAEL;AAJpB;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA1CQZ,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef } from \"react\"; \n// import data\nimport data from \"./data\";\n// import styles\nimport \"./styles/app.scss\"; \n// adding components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\n\n\nfunction App() {\n   // reference\n   const audioRef = useRef(null);\n  // state\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n});\nconst timeUpdateHandler = (e) => {\n  const current = e.target.currentTime;\n  const duration = e.target.duration;\n  setSongInfo({...songInfo, \n      currentTime: current,  duration\n  });\n};\n\n\n  return (\n    <div className=\"App\">\n      <Song currentSong={currentSong}/>\n      <Player \n      audioRef={audioRef}\n      setIsPlaying={setIsPlaying}\n      isPlaying={isPlaying}\n      currentSong={currentSong}\n      setSongInfo={setSongInfo}\n      songInfo={songInfo}\n      />\n      <Library \n      audioRef={au}\n      songs={songs} \n      setCurrentSong={setCurrentSong}/>\n      <audio  \n            ref={audioRef} \n            onLoadedMetadata={timeUpdateHandler  }\n            src={currentSong.audio}\n            onTimeUpdate={timeUpdateHandler}\n      ></audio> \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}