{"ast":null,"code":"var _jsxFileName = \"/Users/aigerim.kashkarbekova/Desktop/themusichall/themusic-hall/src/components/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleRight, faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = _ref => {\n  _s();\n\n  let {\n    currentSong,\n    isPlaying,\n    setIsPlaying\n  } = _ref;\n  // reference\n  const audioRef = useRef(null); // event handler\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo,\n      currentTime: current,\n      duration\n    });\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  }; // state\n\n\n  const [songInfo, setSongInfo] = useState({\n    currentTime: null,\n    duration: null\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: 0,\n        onChange: dragHandler,\n        max: songInfo.duration,\n        value: songInfo.currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      onLoadedMetadata: timeUpdateHandler,\n      src: currentSong.audio,\n      onTimeUpdate: timeUpdateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Player, \"p61rdD1bnUqEO8WwgTedH36g77I=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/aigerim.kashkarbekova/Desktop/themusichall/themusic-hall/src/components/Player.js"],"names":["React","useRef","useState","FontAwesomeIcon","faPlay","faAngleRight","faAngleLeft","Player","currentSong","isPlaying","setIsPlaying","audioRef","playSongHandler","current","pause","play","timeUpdateHandler","e","target","currentTime","duration","setSongInfo","songInfo","getTime","time","Math","floor","slice","dragHandler","value","audio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,WAA/B,QAAkD,mCAAlD;;;AAEA,MAAMC,MAAM,GAAG,QAA2C;AAAA;;AAAA,MAA1C;AAACC,IAAAA,WAAD;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA;AAAzB,GAA0C;AACtD;AACA,QAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAD,CAAvB,CAFsD,CAGtD;;AACA,QAAMW,eAAe,GAAG,MAAM;AAC1B,QAAIH,SAAJ,EAAc;AACVE,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACAJ,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,KAHD,MAGK;AACDE,MAAAA,QAAQ,CAACE,OAAT,CAAiBE,IAAjB;AACAL,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AAEH;AACJ,GATD;;AAUA,QAAMO,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,UAAMJ,OAAO,GAAGI,CAAC,CAACC,MAAF,CAASC,WAAzB;AACA,UAAMC,QAAQ,GAAGH,CAAC,CAACC,MAAF,CAASE,QAA1B;AACAC,IAAAA,WAAW,CAAC,EAAC,GAAGC,QAAJ;AACRH,MAAAA,WAAW,EAAEN,OADL;AACeO,MAAAA;AADf,KAAD,CAAX;AAGH,GAND;;AAOA,QAAMG,OAAO,GAAIC,IAAD,IAAU;AACtB,WACIC,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,EAAlB,IAAwB,GAAxB,GAA8B,CAAC,MAAMC,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,EAAlB,CAAP,EAA8BG,KAA9B,CAAoC,CAAC,CAArC,CADlC;AAGH,GAJD;;AAKA,QAAMC,WAAW,GAAIX,CAAD,IAAM;AACtBI,IAAAA,WAAW,CAAC,EAAC,GAAGC,QAAJ;AAAcH,MAAAA,WAAW,EAAEF,CAAC,CAACC,MAAF,CAASW;AAApC,KAAD,CAAX;AAEH,GAHD,CA1BsD,CA+BtD;;;AACA,QAAM,CAACP,QAAD,EAAWD,WAAX,IAA0BnB,QAAQ,CAAC;AACrCiB,IAAAA,WAAW,EAAE,IADwB;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAD,CAAxC;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA,kBAAIG,OAAO,CAACD,QAAQ,CAACH,WAAV;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACA,QAAA,IAAI,EAAC,OADL;AAEA,QAAA,GAAG,EAAE,CAFL;AAGA,QAAA,QAAQ,EAAES,WAHV;AAIA,QAAA,GAAG,EAAEN,QAAQ,CAACF,QAJd;AAKA,QAAA,KAAK,EAAEE,QAAQ,CAACH;AALhB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAA,kBAAII,OAAO,CAACD,QAAQ,CAACF,QAAV;AAAX;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI,QAAC,eAAD;AACA,QAAA,SAAS,EAAC,WADV;AAEA,QAAA,IAAI,EAAC,IAFL;AAGA,QAAA,IAAI,EAAEd;AAHN;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,eAAD;AACA,QAAA,OAAO,EAAEM,eADT;AAEA,QAAA,SAAS,EAAC,MAFV;AAEiB,QAAA,IAAI,EAAC,IAFtB;AAGA,QAAA,IAAI,EAAER;AAHN;AAAA;AAAA;AAAA;AAAA,cALJ,eASI,QAAC,eAAD;AACA,QAAA,SAAS,EAAC,cADV;AAEA,QAAA,IAAI,EAAC,IAFL;AAGA,QAAA,IAAI,EAAEC;AAHN;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAyBI;AACA,MAAA,GAAG,EAAEM,QADL;AAEA,MAAA,gBAAgB,EAAEK,iBAFlB;AAGA,MAAA,GAAG,EAAER,WAAW,CAACsB,KAHjB;AAIA,MAAA,YAAY,EAAEd;AAJd;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CAvED;;GAAMT,M;;KAAAA,M;AAyEN,eAAeA,MAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faPlay, faAngleRight, faAngleLeft } from \"@fortawesome/free-solid-svg-icons\"\n\nconst Player = ({currentSong, isPlaying, setIsPlaying}) =>{\n    // reference\n    const audioRef = useRef(null);\n    // event handler\n    const playSongHandler = () => {\n        if (isPlaying){\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n        }else{\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n\n        }\n    }; \n    const timeUpdateHandler = (e) => {\n        const current = e.target.currentTime;\n        const duration = e.target.duration;\n        setSongInfo({...songInfo, \n            currentTime: current,  duration\n        });\n    };\n    const getTime = (time) => {\n        return(\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        );\n    };\n    const dragHandler = (e) =>{\n        setSongInfo({...songInfo, currentTime: e.target.value})\n\n    }\n\n    // state\n    const [songInfo, setSongInfo] = useState({\n        currentTime: null,\n        duration: null,\n    });\n    return(\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <input \n                type=\"range\" \n                min={0} \n                onChange={dragHandler}\n                max={songInfo.duration} \n                value={songInfo.currentTime}/>\n                <p>{getTime(songInfo.duration)}</p>\n            </div> \n            <div className=\"play-control\">\n                <FontAwesomeIcon \n                className=\"skip-back\" \n                size=\"2x\" \n                icon={faAngleLeft}/>\n                <FontAwesomeIcon \n                onClick={playSongHandler} \n                className=\"play\" size=\"2x\" \n                icon={faPlay}/>\n                <FontAwesomeIcon \n                className=\"skip-forward\" \n                size=\"2x\" \n                icon={faAngleRight}/>\n            </div>   \n            <audio  \n            ref={audioRef} \n            onLoadedMetadata={timeUpdateHandler  }\n            src={currentSong.audio}\n            onTimeUpdate={timeUpdateHandler}\n            ></audio>        \n        </div>\n\n    )\n}\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}