{"ast":null,"code":"var _jsxFileName = \"/Users/aigerim.kashkarbekova/Desktop/themusichall/themusic-hall/src/components/Player.js\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleRight, faAngleLeft, faPause } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = _ref => {\n  let {\n    audioRef,\n    isPlaying,\n    setIsPlaying,\n    setSongInfo,\n    songInfo,\n    songs,\n    currentSong,\n    setCurrentSong,\n    setSongs\n  } = _ref;\n\n  // use effect\n  const activeLibraryHandler = nextPrev => {\n    const newSongs = songs.map(song => {\n      if (song.id === nextPrev.id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs);\n  }; // event handlers\n\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  const skipTrackHandler = async direction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (direction === 'skip-forward') {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler;\n    }\n\n    if (direction === 'skip-back') {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: 0,\n        onChange: dragHandler,\n        max: songInfo.duration || 0,\n        value: songInfo.currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: songInfo.duration ? getTime(songInfo.duration) : \"0:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler('skip-back'),\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: isPlaying ? faPause : faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler('skip-forward'),\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/aigerim.kashkarbekova/Desktop/themusichall/themusic-hall/src/components/Player.js"],"names":["React","FontAwesomeIcon","faPlay","faAngleRight","faAngleLeft","faPause","Player","audioRef","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","currentSong","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","playSongHandler","current","pause","play","getTime","time","Math","floor","slice","dragHandler","e","currentTime","target","value","skipTrackHandler","direction","currentIndex","findIndex","length","duration"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faPlay, faAngleRight, faAngleLeft, faPause } from \"@fortawesome/free-solid-svg-icons\"\n\nconst Player = ({audioRef, isPlaying, setIsPlaying, setSongInfo, songInfo, songs, currentSong, setCurrentSong, setSongs}) =>{\n    // use effect\n    const activeLibraryHandler = (nextPrev) => {\n        const newSongs = songs.map((song) => {\n          if (song.id === nextPrev.id) {\n            return {\n              ...song,\n              active: true,\n            };\n          } else {\n            return {\n              ...song,\n              active: false,\n            };\n          }\n        });\n    \n        setSongs(newSongs);\n      };\n    // event handlers\n    const playSongHandler = () => {\n        if (isPlaying){\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n        }else{\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n\n        }\n    }; \n   \n    const getTime = (time) => { \n        return(\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        );\n    };\n    const dragHandler = (e) =>{\n        audioRef.current.currentTime = e.target.value\n        setSongInfo({...songInfo, currentTime: e.target.value})\n\n    }\n    const skipTrackHandler = async (direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n        if(direction === 'skip-forward'){\n           await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n           activeLibraryHandler\n        }\n        if(direction === 'skip-back'){\n            if((currentIndex - 1) % songs.length === -1){\n                await setCurrentSong(songs[songs.length -1]);\n                if(isPlaying) audioRef.current.play();\n                return;\n            }\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n        }\n        if(isPlaying) audioRef.current.play();\n        \n    };\n    return(\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                {/* <div className=\"track\"> */}\n                <input \n                type=\"range\" \n                min={0} \n                onChange={dragHandler}\n                max={songInfo.duration || 0} \n                value={songInfo.currentTime}\n                />\n                {/* <div className=\"animate-track\"></div> */}\n                {/* </div> */}\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n            </div> \n            <div className=\"play-control\">\n                <FontAwesomeIcon \n                onClick={() => skipTrackHandler('skip-back')}\n                className=\"skip-back\" \n                size=\"2x\" \n                icon={faAngleLeft}\n                />\n                <FontAwesomeIcon \n                onClick={playSongHandler} \n                className=\"play\" size=\"2x\" \n                icon={isPlaying ? faPause : faPlay}\n                />\n                <FontAwesomeIcon \n                onClick={() => skipTrackHandler('skip-forward')}\n                className=\"skip-forward\" \n                size=\"2x\" \n                icon={faAngleRight}\n                />\n            </div>   \n        </div>\n\n    )\n}\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}